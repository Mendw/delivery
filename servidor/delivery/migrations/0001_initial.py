# Generated by Django 2.2.4 on 2019-09-02 20:20

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone_number', models.CharField(blank=True, default=None, max_length=31, null=True)),
                ('identifier', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('is_email_verified', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coordinates', models.CharField(max_length=30, null=True)),
                ('title', models.CharField(max_length=20)),
                ('phone_number', models.CharField(max_length=31)),
                ('instructions', models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Business',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.CharField(max_length=20)),
                ('name', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Characteristic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('description', models.TextField()),
                ('icon', models.ImageField(upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='Day',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=12)),
            ],
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.BigIntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('title', models.CharField(max_length=50)),
                ('description', models.TextField()),
                ('priority', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coordinates', models.CharField(max_length=30, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('comment', models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.CharField(max_length=30)),
                ('name', models.CharField(max_length=50)),
                ('decription', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.CharField(max_length=30)),
                ('handled_by', models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='handles', to='delivery.Request')),
                ('postition', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='delivery.Position')),
            ],
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Timespan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.TimeField()),
                ('end', models.TimeField()),
                ('day', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='delivery.Day')),
            ],
        ),
        migrations.CreateModel(
            name='Treatment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('icon', models.ImageField(upload_to='')),
                ('name', models.CharField(max_length=30)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='VehicleType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Zone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('query', models.TextField()),
                ('placeID', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Delivery',
            fields=[
                ('business_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='delivery.Business')),
                ('is_exclusive', models.BooleanField()),
                ('characteristics', models.ManyToManyField(to='delivery.Characteristic')),
            ],
            bases=('delivery.business',),
        ),
        migrations.CreateModel(
            name='DeliveryPerson',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('is_SMS_active', models.BooleanField()),
                ('is_freelancer', models.BooleanField()),
                ('is_verified', models.BooleanField()),
                ('is_working', models.BooleanField()),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('delivery.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Store',
            fields=[
                ('business_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='delivery.Business')),
            ],
            bases=('delivery.business',),
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('color', models.CharField(max_length=30)),
                ('license_plate', models.CharField(max_length=30)),
                ('model', models.CharField(max_length=30)),
                ('make', models.CharField(max_length=30)),
                ('year', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1900), django.core.validators.MaxValueValidator(2050)])),
                ('photo', models.ImageField(null=True, upload_to='')),
                ('vehicle_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='delivery.VehicleType')),
            ],
        ),
        migrations.CreateModel(
            name='UserBusinessAgreement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_accepted', models.BooleanField()),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='delivery.Business')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Step',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_done', models.BooleanField()),
                ('description', models.TextField()),
                ('address', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='delivery.Address')),
                ('request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='steps', to='delivery.Request')),
            ],
        ),
        migrations.AddField(
            model_name='request',
            name='status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='delivery.Status'),
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.PositiveIntegerField()),
                ('comment', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('request', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='delivery.Request')),
            ],
        ),
        migrations.CreateModel(
            name='Package',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.CharField(max_length=30)),
                ('height', models.DecimalField(decimal_places=2, max_digits=4)),
                ('weight', models.DecimalField(decimal_places=2, max_digits=5)),
                ('width', models.DecimalField(decimal_places=2, max_digits=4)),
                ('length', models.DecimalField(decimal_places=2, max_digits=4)),
                ('products', models.ManyToManyField(to='delivery.Product')),
                ('request', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='packages', to='delivery.Request')),
                ('treatments', models.ManyToManyField(to='delivery.Treatment')),
            ],
        ),
        migrations.CreateModel(
            name='Contract',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='delivery.Business')),
            ],
        ),
        migrations.CreateModel(
            name='BusinessBusinessAgreement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True)),
                ('is_accepted', models.BooleanField()),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='delivery.Business')),
                ('target', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='incoming_business_agreements', to='delivery.Business')),
            ],
        ),
        migrations.AddField(
            model_name='business',
            name='business_agreements',
            field=models.ManyToManyField(through='delivery.BusinessBusinessAgreement', to='delivery.Business'),
        ),
        migrations.AddField(
            model_name='business',
            name='user_agreements',
            field=models.ManyToManyField(related_name='agreements', through='delivery.UserBusinessAgreement', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='business',
            name='zone',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='delivery.Zone'),
        ),
        migrations.CreateModel(
            name='UserVehicle',
            fields=[
                ('vehicle_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='delivery.Vehicle')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vehicles', to=settings.AUTH_USER_MODEL)),
            ],
            bases=('delivery.vehicle',),
        ),
        migrations.CreateModel(
            name='UserProduct',
            fields=[
                ('product_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='delivery.Product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to=settings.AUTH_USER_MODEL)),
            ],
            bases=('delivery.product',),
        ),
        migrations.CreateModel(
            name='UserAdress',
            fields=[
                ('address_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='delivery.Address')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='addresses', to=settings.AUTH_USER_MODEL)),
            ],
            bases=('delivery.address',),
        ),
        migrations.CreateModel(
            name='StoreProduct',
            fields=[
                ('product_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='delivery.Product')),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='delivery.Store')),
            ],
            bases=('delivery.product',),
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('description', models.TextField()),
                ('pickup_time', models.TimeField()),
                ('delivery_time', models.TimeField()),
                ('max_weight', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('max_heigth', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('max_length', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('max_width', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('delivery', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='delivery.Delivery')),
            ],
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('timespan_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='delivery.Timespan')),
                ('contract', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedule', to='delivery.Contract')),
            ],
            bases=('delivery.timespan',),
        ),
        migrations.AddField(
            model_name='request',
            name='delivery_company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='delivery.Delivery'),
        ),
        migrations.AddField(
            model_name='request',
            name='delivery_person',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='delivery.DeliveryPerson'),
        ),
        migrations.AddField(
            model_name='deliveryperson',
            name='worksFor',
            field=models.ManyToManyField(related_name='employees', through='delivery.Contract', to='delivery.Business'),
        ),
        migrations.AddField(
            model_name='contract',
            name='delivery_person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='delivery.DeliveryPerson'),
        ),
        migrations.CreateModel(
            name='BusinessVehicle',
            fields=[
                ('vehicle_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='delivery.Vehicle')),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vehicles', to='delivery.Business')),
            ],
            bases=('delivery.vehicle',),
        ),
        migrations.CreateModel(
            name='BusinessAddress',
            fields=[
                ('address_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='delivery.Address')),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='addresses', to='delivery.Business')),
            ],
            bases=('delivery.address',),
        ),
    ]
